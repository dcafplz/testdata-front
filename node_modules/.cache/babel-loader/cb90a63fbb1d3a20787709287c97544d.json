{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kwan-yong/Documents/GitHub/testdatafront/src/components/common/AppLayout.js\";\n\nimport React from \"react\";\nimport Footer from './Footer';\nimport Nav from './Nav';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nvar theme = createTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#ffb74d' // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n\n    },\n    secondary: {\n      light: '#0066ff',\n      main: '#0044ff',\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#ffcc00'\n    },\n    // Provide every color token (light, main, dark, and contrastText) when using\n    // custom colors for props in Material UI's components.\n    // Then you will be able to use it like this: `<Button color=\"custom\">`\n    // (For TypeScript, you need to add module augmentation for the `custom` value)\n    custom: {\n      light: '#ffa726',\n      main: '#f57c00',\n      dark: '#ef6c00',\n      contrastText: 'rgba(0, 0, 0, 0.87)'\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2\n  }\n});\n\nvar AppLayout = function AppLayout(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Nav, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), children, /*#__PURE__*/React.createElement(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default AppLayout;","map":{"version":3,"names":["React","Footer","Nav","CssBaseline","createTheme","ThemeProvider","theme","palette","primary","main","secondary","light","contrastText","custom","dark","contrastThreshold","tonalOffset","AppLayout","children"],"sources":["/Users/kwan-yong/Documents/GitHub/testdatafront/src/components/common/AppLayout.js"],"sourcesContent":["import React from \"react\";\nimport Footer from './Footer';\nimport Nav from './Nav';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        // light: will be calculated from palette.primary.main,\n        main: '#ffb74d',\n        // dark: will be calculated from palette.primary.main,\n        // contrastText: will be calculated to contrast with palette.primary.main\n      },\n      secondary: {\n        light: '#0066ff',\n        main: '#0044ff',\n        // dark: will be calculated from palette.secondary.main,\n        contrastText: '#ffcc00',\n      },\n       // Provide every color token (light, main, dark, and contrastText) when using\n       // custom colors for props in Material UI's components.\n       // Then you will be able to use it like this: `<Button color=\"custom\">`\n       // (For TypeScript, you need to add module augmentation for the `custom` value)\n      custom: {\n        light: '#ffa726',\n        main: '#f57c00',\n        dark: '#ef6c00',\n        contrastText: 'rgba(0, 0, 0, 0.87)',\n      },\n      // Used by `getContrastText()` to maximize the contrast between\n      // the background and the text.\n      contrastThreshold: 3,\n      // Used by the functions below to shift a color's luminance by approximately\n      // two indexes within its tonal palette.\n      // E.g., shift from Red 500 to Red 300 or Red 700.\n      tonalOffset: 0.2,\n    },\n  });\n\nconst AppLayout = ({ children }) => {\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Nav />\n                {children}\n                <Footer />\n            </ThemeProvider>\n        </>\n    );\n};\n\n\nexport default AppLayout;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,sBAA3C;AAEA,IAAMC,KAAK,GAAGF,WAAW,CAAC;EACtBG,OAAO,EAAE;IACPC,OAAO,EAAE;MACP;MACAC,IAAI,EAAE,SAFC,CAGP;MACA;;IAJO,CADF;IAOPC,SAAS,EAAE;MACTC,KAAK,EAAE,SADE;MAETF,IAAI,EAAE,SAFG;MAGT;MACAG,YAAY,EAAE;IAJL,CAPJ;IAaN;IACA;IACA;IACA;IACDC,MAAM,EAAE;MACNF,KAAK,EAAE,SADD;MAENF,IAAI,EAAE,SAFA;MAGNK,IAAI,EAAE,SAHA;MAINF,YAAY,EAAE;IAJR,CAjBD;IAuBP;IACA;IACAG,iBAAiB,EAAE,CAzBZ;IA0BP;IACA;IACA;IACAC,WAAW,EAAE;EA7BN;AADa,CAAD,CAAzB;;AAkCA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;EAChC,oBACI,uDACI,oBAAC,aAAD;IAAe,KAAK,EAAEZ,KAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,WAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,GAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,EAGKY,QAHL,eAII,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJJ,CADJ,CADJ;AAUH,CAXD;;AAcA,eAAeD,SAAf"},"metadata":{},"sourceType":"module"}